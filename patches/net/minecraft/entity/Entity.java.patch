--- ../src-base/minecraft/net/minecraft/entity/Entity.java
+++ ../src-work/minecraft/net/minecraft/entity/Entity.java
@@ -1,5 +1,6 @@
 package net.minecraft.entity;
 
+import carpet.carpetclient.CarpetClientChunkLogger;
 import com.google.common.collect.Iterables;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
@@ -74,13 +75,14 @@
 import net.minecraft.util.text.TextComponentString;
 import net.minecraft.util.text.event.HoverEvent;
 import net.minecraft.util.text.translation.I18n;
-import net.minecraft.world.Explosion;
-import net.minecraft.world.Teleporter;
-import net.minecraft.world.World;
-import net.minecraft.world.WorldServer;
+import net.minecraft.world.*;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import carpet.CarpetSettings;
+import carpet.helpers.BabyGrowingUp;
+import carpet.helpers.BlockRotator;
+
 public abstract class Entity implements ICommandSender
 {
     private static final Logger field_184243_a = LogManager.getLogger();
@@ -136,7 +138,7 @@
     private int field_190534_ay;
     protected boolean field_70171_ac;
     public int field_70172_ad;
-    protected boolean field_70148_d;
+    public boolean field_70148_d;
     protected boolean field_70178_ae;
     protected EntityDataManager field_70180_af;
     protected static final DataParameter<Byte> field_184240_ax = EntityDataManager.<Byte>func_187226_a(Entity.class, DataSerializers.field_187191_a);
@@ -168,6 +170,9 @@
     private final double[] field_191505_aI;
     private long field_191506_aJ;
 
+        //CM
+    public String cm_name() { return "Other Entity"; }
+
     public Entity(World p_i1582_1_)
     {
         this.field_145783_c = field_70152_a++;
@@ -278,6 +283,14 @@
     {
         if (p_70105_1_ != this.field_70130_N || p_70105_2_ != this.field_70131_O)
         {
+            /*
+             * Redirected code for changing size of mobs CARPET-XCOM
+             */
+            if(CarpetSettings.growingUpWallJumpFix){
+                BabyGrowingUp.carpetSetSize(this, p_70105_1_, p_70105_2_);
+                return;
+            }
+
             float f = this.field_70130_N;
             this.field_70130_N = p_70105_1_;
             this.field_70131_O = p_70105_2_;
@@ -299,7 +312,8 @@
         }
     }
 
-    protected void func_70101_b(float p_70101_1_, float p_70101_2_)
+    //CM changed from protected to set in player action pack
+    public void func_70101_b(float p_70101_1_, float p_70101_2_)
     {
         this.field_70177_z = p_70101_1_ % 360.0F;
         this.field_70125_A = p_70101_2_ % 360.0F;
@@ -375,7 +389,7 @@
                                 j = -1;
                             }
 
-                            this.func_184204_a(j);
+                            this.startTeleporting(j);
                         }
                     }
 
@@ -508,6 +522,12 @@
 
     public void func_70091_d(MoverType p_70091_1_, double p_70091_2_, double p_70091_4_, double p_70091_6_)
     {
+        // [CM] PistonClippingFix -- Check to add to player counter
+        if (CarpetSettings.pistonClippingFix > 0 && this instanceof EntityPlayerMP)
+        {
+            ((EntityPlayerMP)this).pistonClippingCounter = CarpetSettings.pistonClippingFix;
+        }
+
         if (this.field_70145_X)
         {
             this.func_174826_a(this.func_174813_aQ().func_72317_d(p_70091_2_, p_70091_4_, p_70091_6_));
@@ -654,12 +674,28 @@
                 }
             }
 
-            List<AxisAlignedBB> list1 = this.field_70170_p.func_184144_a(this, this.func_174813_aQ().func_72321_a(p_70091_2_, p_70091_4_, p_70091_6_));
+            // Entity move optimization for faster entities CARPET-MASA
+            List<AxisAlignedBB> list1 = null;
+            boolean optimize = false;
+            if (CarpetSettings.fastMovingEntityOptimization &&
+                    (p_70091_2_ > 4 || p_70091_2_ < -4 ||
+                     p_70091_4_ > 4 || p_70091_4_ < -4 ||
+                     p_70091_6_ > 4 || p_70091_6_ < -4)) {
+
+                optimize = true;
+            }
+
+            if (!optimize) { // CARPET-MASA
+                list1 = this.field_70170_p.func_184144_a(this, this.func_174813_aQ().func_72321_a(p_70091_2_, p_70091_4_, p_70091_6_));
+            }
             AxisAlignedBB axisalignedbb = this.func_174813_aQ();
 
             if (p_70091_4_ != 0.0D)
             {
                 int k = 0;
+                if (optimize) { // CARPET-MASA
+                    list1 = this.field_70170_p.func_184144_a(this, this.func_174813_aQ().func_72321_a(0, p_70091_4_, 0));
+                }
 
                 for (int l = list1.size(); k < l; ++k)
                 {
@@ -672,6 +708,9 @@
             if (p_70091_2_ != 0.0D)
             {
                 int j5 = 0;
+                if (optimize) { // CARPET-MASA
+                    list1 = this.field_70170_p.func_184144_a(this, this.func_174813_aQ().func_72321_a(p_70091_2_, 0, 0));
+                }
 
                 for (int l5 = list1.size(); j5 < l5; ++j5)
                 {
@@ -687,6 +726,9 @@
             if (p_70091_6_ != 0.0D)
             {
                 int k5 = 0;
+                if (optimize) { // CARPET-MASA
+                    list1 = this.field_70170_p.func_184144_a(this, this.func_174813_aQ().func_72321_a(0, 0, p_70091_6_));
+                }
 
                 for (int i6 = list1.size(); k5 < i6; ++k5)
                 {
@@ -1140,6 +1182,8 @@
 
     public boolean func_70072_I()
     {
+        if(carpet.carpetclient.CarpetClientChunkLogger.logger.enabled)
+            carpet.carpetclient.CarpetClientChunkLogger.setReason("Entity checking if pushed by water: " + func_70005_c_());
         if (this.func_184187_bx() instanceof EntityBoat)
         {
             this.field_70171_ac = false;
@@ -1159,6 +1203,7 @@
         {
             this.field_70171_ac = false;
         }
+        carpet.carpetclient.CarpetClientChunkLogger.resetReason();
 
         return this.field_70171_ac;
     }
@@ -1533,6 +1578,9 @@
 
         if (!this.field_70128_L && s != null && !this.func_184218_aH())
         {
+            // Fix for fixing duplication caused by riding entitys into unloaded chunks CARPET-XCOM
+            if(CarpetSettings.duplicationFixRidingEntitys && hasPlayerPassenger(this)) return false;
+
             p_70039_1_.func_74778_a("id", s);
             this.func_189511_e(p_70039_1_);
             return true;
@@ -1543,6 +1591,19 @@
         }
     }
 
+    // Method for fixing duplication caused by riding entitys into unloaded chunks CARPET-XCOM
+    private static boolean hasPlayerPassenger(Entity entity) {
+        for (Entity passenger : entity.field_184244_h) {
+            if (passenger instanceof EntityPlayer) {
+                return true;
+            }
+            if (hasPlayerPassenger(passenger)) {
+                return true;
+            }
+        }
+        return false;
+    }
+
     public static void func_190533_a(DataFixer p_190533_0_)
     {
         p_190533_0_.func_188258_a(FixTypes.ENTITY, new IDataWalker()
@@ -1619,6 +1680,11 @@
                 p_189511_1_.func_74782_a("Tags", nbttaglist);
             }
 
+            // Save hitbox of entity to prevent clipping into walls. CARPET-XCOM
+            if(CarpetSettings.reloadSuffocationFix) {
+                p_189511_1_.func_74782_a("AABBcarpet", this.func_70087_a(func_174813_aQ().field_72336_d, func_174813_aQ().field_72337_e, func_174813_aQ().field_72334_f, func_174813_aQ().field_72340_a, func_174813_aQ().field_72338_b, func_174813_aQ().field_72339_c));
+            }
+
             this.func_70014_b(p_189511_1_);
 
             if (this.func_184207_aI())
@@ -1663,19 +1729,19 @@
             this.field_70181_x = nbttaglist2.func_150309_d(1);
             this.field_70179_y = nbttaglist2.func_150309_d(2);
 
-            if (Math.abs(this.field_70159_w) > 10.0D)
-            {
-                this.field_70159_w = 0.0D;
-            }
+            // Fix to entitys losing speed when reloaded CARPET-XCOM
+            if(!CarpetSettings.reloadEntitySpeedlossFix) {
+                if (Math.abs(this.field_70159_w) > 10.0D) {
+                    this.field_70159_w = 0.0D;
+                }
 
-            if (Math.abs(this.field_70181_x) > 10.0D)
-            {
-                this.field_70181_x = 0.0D;
-            }
+                if (Math.abs(this.field_70181_x) > 10.0D) {
+                    this.field_70181_x = 0.0D;
+                }
 
-            if (Math.abs(this.field_70179_y) > 10.0D)
-            {
-                this.field_70179_y = 0.0D;
+                if (Math.abs(this.field_70179_y) > 10.0D) {
+                    this.field_70179_y = 0.0D;
+                }
             }
 
             this.field_70165_t = nbttaglist.func_150309_d(0);
@@ -1744,6 +1810,17 @@
             {
                 this.func_70107_b(this.field_70165_t, this.field_70163_u, this.field_70161_v);
             }
+
+            // Save hitbox of entity to prevent clipping into walls. CARPET-XCOM
+            if(CarpetSettings.reloadSuffocationFix){
+                NBTTagList nbttaglist4 = p_70020_1_.func_150295_c("AABBcarpet", 6);
+                if(nbttaglist4 != null && nbttaglist4.func_74745_c() == 6) {
+                    AxisAlignedBB aabb = new AxisAlignedBB(nbttaglist4.func_150309_d(0), nbttaglist4.func_150309_d(1), nbttaglist4.func_150309_d(2), nbttaglist4.func_150309_d(3), nbttaglist4.func_150309_d(4), nbttaglist4.func_150309_d(5));
+                    if (aabb != null) {
+                        this.func_174826_a(aabb);
+                    }
+                }
+            }
         }
         catch (Throwable throwable)
         {
@@ -1908,7 +1985,12 @@
 
     public double func_70042_X()
     {
+        if (CarpetSettings.rideableGhasts && this.field_70131_O > 2.0F)
+        {
+            return (double)this.field_70131_O - 0.2D;
+        }
         return (double)this.field_70131_O * 0.75D;
+
     }
 
     public boolean func_184220_m(Entity p_184220_1_)
@@ -1966,6 +2048,18 @@
         }
     }
 
+    // CM
+    public final void dismountRidingEntityBase()
+    {
+        if (this.field_184239_as != null)
+        {
+            Entity entity = this.field_184239_as;
+            this.field_184239_as = null;
+            entity.func_184225_p(this);
+        }
+    }
+    // CM END
+
     protected void func_184200_o(Entity p_184200_1_)
     {
         if (p_184200_1_.func_184187_bx() != this)
@@ -2349,97 +2443,6 @@
         this.field_181018_ap = p_180432_1_.field_181018_ap;
     }
 
-    @Nullable
-    public Entity func_184204_a(int p_184204_1_)
-    {
-        if (!this.field_70170_p.field_72995_K && !this.field_70128_L)
-        {
-            this.field_70170_p.field_72984_F.func_76320_a("changeDimension");
-            MinecraftServer minecraftserver = this.func_184102_h();
-            int i = this.field_71093_bK;
-            WorldServer worldserver = minecraftserver.func_71218_a(i);
-            WorldServer worldserver1 = minecraftserver.func_71218_a(p_184204_1_);
-            this.field_71093_bK = p_184204_1_;
-
-            if (i == 1 && p_184204_1_ == 1)
-            {
-                worldserver1 = minecraftserver.func_71218_a(0);
-                this.field_71093_bK = 0;
-            }
-
-            this.field_70170_p.func_72900_e(this);
-            this.field_70128_L = false;
-            this.field_70170_p.field_72984_F.func_76320_a("reposition");
-            BlockPos blockpos;
-
-            if (p_184204_1_ == 1)
-            {
-                blockpos = worldserver1.func_180504_m();
-            }
-            else
-            {
-                double d0 = this.field_70165_t;
-                double d1 = this.field_70161_v;
-                double d2 = 8.0D;
-
-                if (p_184204_1_ == -1)
-                {
-                    d0 = MathHelper.func_151237_a(d0 / 8.0D, worldserver1.func_175723_af().func_177726_b() + 16.0D, worldserver1.func_175723_af().func_177728_d() - 16.0D);
-                    d1 = MathHelper.func_151237_a(d1 / 8.0D, worldserver1.func_175723_af().func_177736_c() + 16.0D, worldserver1.func_175723_af().func_177733_e() - 16.0D);
-                }
-                else if (p_184204_1_ == 0)
-                {
-                    d0 = MathHelper.func_151237_a(d0 * 8.0D, worldserver1.func_175723_af().func_177726_b() + 16.0D, worldserver1.func_175723_af().func_177728_d() - 16.0D);
-                    d1 = MathHelper.func_151237_a(d1 * 8.0D, worldserver1.func_175723_af().func_177736_c() + 16.0D, worldserver1.func_175723_af().func_177733_e() - 16.0D);
-                }
-
-                d0 = (double)MathHelper.func_76125_a((int)d0, -29999872, 29999872);
-                d1 = (double)MathHelper.func_76125_a((int)d1, -29999872, 29999872);
-                float f = this.field_70177_z;
-                this.func_70012_b(d0, this.field_70163_u, d1, 90.0F, 0.0F);
-                Teleporter teleporter = worldserver1.func_85176_s();
-                teleporter.func_180620_b(this, f);
-                blockpos = new BlockPos(this);
-            }
-
-            worldserver.func_72866_a(this, false);
-            this.field_70170_p.field_72984_F.func_76318_c("reloading");
-            Entity entity = EntityList.func_191304_a(this.getClass(), worldserver1);
-
-            if (entity != null)
-            {
-                entity.func_180432_n(this);
-
-                if (i == 1 && p_184204_1_ == 1)
-                {
-                    BlockPos blockpos1 = worldserver1.func_175672_r(worldserver1.func_175694_M());
-                    entity.func_174828_a(blockpos1, entity.field_70177_z, entity.field_70125_A);
-                }
-                else
-                {
-                    entity.func_174828_a(blockpos, entity.field_70177_z, entity.field_70125_A);
-                }
-
-                boolean flag = entity.field_98038_p;
-                entity.field_98038_p = true;
-                worldserver1.func_72838_d(entity);
-                entity.field_98038_p = flag;
-                worldserver1.func_72866_a(entity, false);
-            }
-
-            this.field_70128_L = true;
-            this.field_70170_p.field_72984_F.func_76319_b();
-            worldserver.func_82742_i();
-            worldserver1.func_82742_i();
-            this.field_70170_p.field_72984_F.func_76319_b();
-            return entity;
-        }
-        else
-        {
-            return null;
-        }
-    }
-
     public boolean func_184222_aU()
     {
         return true;
@@ -2578,6 +2581,10 @@
 
     public EnumFacing func_174811_aO()
     {
+        //CM
+        if (BlockRotator.flippinEligibility(this))
+            return EnumFacing.func_176731_b(MathHelper.func_76128_c((double)(this.field_70177_z * 4.0F / 360.0F) + 0.5D) & 3).func_176734_d();
+
         return EnumFacing.func_176731_b(MathHelper.func_76128_c((double)(this.field_70177_z * 4.0F / 360.0F) + 0.5D) & 3);
     }
 
@@ -2886,4 +2893,102 @@
     {
         return 1;
     }
+
+    //CM
+    public int getFire()
+    {
+        return this.field_190534_ay;
+    }
+    
+    public void postLoad()
+    {
+    }
+
+    public void startTeleporting(int dimensionIn){
+        //Remove from current dimension
+
+
+        //TODO MORE
+        if (this.field_71093_bK == 1 && dimensionIn == 1)
+        {
+            dimensionIn = 0;
+        }
+
+        WorldServer server = this.func_184102_h().func_71218_a(this.field_71093_bK);
+
+        this.field_70170_p.func_72900_e(this);
+        this.field_70170_p.func_72866_a(this, false);
+        this.field_70128_L = false;
+        server.func_82742_i();
+
+        //Add to list the other dimension's thread iterates over later in the tick
+        this.func_184102_h().func_71218_a(dimensionIn).teleportedEntityEnqueue(this);
+    }
+
+    public Entity finishTeleporting(WorldServer worldServer)
+    {
+        if (!this.field_70170_p.field_72995_K) {
+
+            DimensionType dimensionNew = worldServer.field_73011_w.func_186058_p();
+            DimensionType dimensionOld = DimensionType.func_186069_a(this.field_71093_bK);
+
+            BlockPos blockpos = null;
+            double x = this.field_70165_t;
+            double z = this.field_70161_v;
+
+            boolean netherTravel = false;
+
+            switch (dimensionNew) {
+                case OVERWORLD:
+                    if (dimensionOld == DimensionType.NETHER) {
+                        x = MathHelper.func_151237_a(x * 8.0D, worldServer.func_175723_af().func_177726_b() + 16.0D, worldServer.func_175723_af().func_177728_d() - 16.0D);
+                        z = MathHelper.func_151237_a(z * 8.0D, worldServer.func_175723_af().func_177736_c() + 16.0D, worldServer.func_175723_af().func_177733_e() - 16.0D);
+                        netherTravel = true;
+                    } else { // == DimensionType.THE_END
+                        blockpos = worldServer.func_175672_r(worldServer.func_175694_M());
+                    }
+                    break;
+                case NETHER:
+                    x = MathHelper.func_151237_a(x / 8.0D, worldServer.func_175723_af().func_177726_b() + 16.0D, worldServer.func_175723_af().func_177728_d() - 16.0D);
+                    z = MathHelper.func_151237_a(z / 8.0D, worldServer.func_175723_af().func_177736_c() + 16.0D, worldServer.func_175723_af().func_177733_e() - 16.0D);
+                    netherTravel = true;
+                    break;
+                case THE_END:
+                    blockpos = worldServer.func_180504_m();
+                    break;
+            }
+
+            if (netherTravel) {
+                x = (double) MathHelper.func_76125_a((int) x, -29999872, 29999872);
+                z = (double) MathHelper.func_76125_a((int) z, -29999872, 29999872);
+                float f = this.field_70177_z;
+                this.func_70012_b(x, this.field_70163_u, z, 90.0F, 0.0F);
+                worldServer.func_85176_s().func_180620_b(this, f);
+                blockpos = new BlockPos(this);
+            }
+
+            //Old WorldServer ticks the Entity that is turning dead, why????
+            //TODO worldserver.updateEntityWithOptionalForce(this, false); //is this changing anything ever?
+            //It does not seem to be doing anything important, or even make sense at all (checking position not NaN, removing/adding to chunk)
+
+            Entity entity = EntityList.func_191304_a(this.getClass(), worldServer); //MCP renaming??: newEntity : newEntity ???
+
+            if (entity != null) {
+                entity.func_180432_n(this);
+                if(blockpos != null)//Is never null, but Compiler wants it
+                    entity.func_174828_a(blockpos, entity.field_70177_z, entity.field_70125_A);
+
+                boolean flag = entity.field_98038_p;
+                entity.field_98038_p = true;
+                worldServer.func_72838_d(entity); //MCP renaming??
+                entity.field_98038_p = flag;
+                worldServer.func_72866_a(entity, false);
+            }
+            this.field_70128_L = true;
+            worldServer.func_82742_i();
+            return entity;
+        } else {
+            return null;
+        }
+    }
 }
